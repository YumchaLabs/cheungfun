[package]
name = "cheungfun-examples"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
description = "Examples for the Cheungfun RAG framework"
categories.workspace = true

[dependencies]
cheungfun = { path = "../cheungfun" }
cheungfun-core = { path = "../cheungfun-core" }
cheungfun-indexing = { path = "../cheungfun-indexing" }
cheungfun-query = { path = "../cheungfun-query" }
cheungfun-integrations = { path = "../cheungfun-integrations", features = [
    "simd",
    "storage",
] }
cheungfun-agents = { path = "../cheungfun-agents" }

# Core async and utilities
tokio = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
async-trait = "0.1"
uuid = { workspace = true }
siumai = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tempfile = "3.20"
chrono = { version = "0.4", features = ["serde"] }
thiserror = "1.0"
ctrlc = "3.4"
clap = { version = "4.0", features = ["derive"] }
futures = "0.3"
rand = "0.8"
unicode-segmentation = "1.12"
env_logger = "0.11"
log = "0.4"

# Performance testing dependencies
criterion = { version = "0.5", optional = true }
sysinfo = { version = "0.32", optional = true }

[features]
# Core features
default = ["basic"]
basic = []

# Application bundles
code-analysis = ["fastembed"]
document-analysis = ["fastembed", "candle"]
intelligent-assistant = []
knowledge-base = ["qdrant", "performance"]

# Integration features
fastembed = ["cheungfun-integrations/fastembed"]
candle = ["cheungfun-integrations/candle"]
qdrant = ["cheungfun-integrations/qdrant"]
performance = ["cheungfun-integrations/simd", "cheungfun-integrations/hnsw"]

# Development features
benchmarks = ["criterion", "sysinfo", "performance"]
gpu = ["cheungfun-integrations/gpu-cuda", "cheungfun-integrations/gpu-metal"]

# Full feature set
full = [
    "code-analysis",
    "document-analysis",
    "intelligent-assistant",
    "knowledge-base",
    "gpu",
    "benchmarks",
]

# === New RAG Technique Examples ===
# Foundational examples
[[bin]]
name = "simple_rag"
path = "01_foundational/simple_rag.rs"

[[bin]]
name = "csv_rag"
path = "01_foundational/csv_rag.rs"

[[bin]]
name = "reliable_rag"
path = "01_foundational/reliable_rag.rs"

[[bin]]
name = "chunk_size_optimization"
path = "01_foundational/chunk_size_optimization.rs"

[[bin]]
name = "proposition_chunking"
path = "01_foundational/proposition_chunking.rs"

[[bin]]
name = "query_transformations"
path = "02_query_enhancement/query_transformations.rs"

[[bin]]
name = "hyde"
path = "02_query_enhancement/hyde.rs"

[[bin]]
name = "hype"
path = "02_query_enhancement/hype.rs"

[[bin]]
name = "contextual_chunk_headers"
path = "03_context_enrichment/contextual_chunk_headers.rs"

[[bin]]
name = "semantic_chunking"
path = "03_context_enrichment/semantic_chunking.rs"

[[bin]]
name = "relevant_segment_extraction"
path = "03_context_enrichment/relevant_segment_extraction.rs"

[[bin]]
name = "context_window_enhancement"
path = "03_context_enrichment/context_window_enhancement.rs"

[[bin]]
name = "contextual_compression"
path = "03_context_enrichment/contextual_compression.rs"

[[bin]]
name = "document_augmentation"
path = "03_context_enrichment/document_augmentation.rs"

[[bin]]
name = "fusion_retrieval"
path = "03_retrieval_optimization/fusion_retrieval.rs"

[[bin]]
name = "intelligent_reranking"
path = "03_retrieval_optimization/intelligent_reranking.rs"

[[bin]]
name = "multi_faceted_filtering"
path = "03_retrieval_optimization/multi_faceted_filtering.rs"

[[bin]]
name = "hierarchical_indices"
path = "03_retrieval_optimization/hierarchical_indices.rs"

[[bin]]
name = "ensemble_retrieval"
path = "03_retrieval_optimization/ensemble_retrieval.rs"

[[bin]]
name = "self_rag"
path = "03_retrieval_optimization/self_rag.rs"

[[bin]]
name = "corrective_rag"
path = "03_retrieval_optimization/corrective_rag.rs"

# Advanced Retrieval examples
[[bin]]
name = "advanced_multi_filtering"
path = "04_advanced_retrieval/multi_faceted_filtering.rs"

[[bin]]
name = "advanced_contextual_compression"
path = "04_advanced_retrieval/contextual_compression.rs"

[[bin]]
name = "adaptive_retrieval"
path = "04_advanced_retrieval/adaptive_retrieval.rs"

[[bin]]
name = "iterative_retrieval"
path = "04_advanced_retrieval/iterative_retrieval.rs"

[[bin]]
name = "self_querying"
path = "04_advanced_retrieval/self_querying.rs"

[[bin]]
name = "multi_vector_retrieval"
path = "04_advanced_retrieval/multi_vector_retrieval.rs"
required-features = ["fastembed"]

[[bin]]
name = "advanced_ensemble_retrieval"
path = "04_advanced_retrieval/ensemble_retrieval.rs"
required-features = ["fastembed"]

# === Application Examples ===
[[bin]]
name = "code_qa_system"
path = "applications/code_qa_system/main.rs"
required-features = ["code-analysis"]

[[bin]]
name = "unity_csharp_rag"
path = "applications/code_qa_system/unity_csharp_rag.rs"
required-features = ["code-analysis"]

[[bin]]
name = "markdown_rag_system"
path = "applications/document_analysis/markdown_rag.rs"
required-features = ["document-analysis"]

[[bin]]
name = "comprehensive_assistant"
path = "applications/intelligent_assistant/comprehensive_assistant.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "simple_assistant"
path = "applications/intelligent_assistant/simple_assistant.rs"
required-features = ["intelligent-assistant"]

# === Integration Examples ===
[[bin]]
name = "kvstore_integration"
path = "integrations/kvstore_demo.rs"
required-features = ["basic"]

# === Performance Examples ===
[[bin]]
name = "comprehensive_performance"
path = "performance/comprehensive_performance_test.rs"
required-features = ["benchmarks"]

[[bin]]
name = "hybrid_performance"
path = "performance/hybrid_performance_demo.rs"
required-features = ["performance"]

[[bin]]
name = "performance_runner"
path = "performance/run_performance_tests.rs"
required-features = ["benchmarks"]

[[bin]]
name = "cache_performance"
path = "performance/cache_performance_optimization.rs"
required-features = ["performance"]

# === Use Case Examples ===
[[bin]]
name = "unity_csharp_cli"
path = "use_cases/unity_csharp_rag_cli.rs"
required-features = ["code-analysis"]

[[bin]]
name = "advanced_rag"
path = "use_cases/advanced_rag_example.rs"
required-features = ["document-analysis"]

[[bin]]
name = "rag_agent"
path = "use_cases/rag_agent_example.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "run_rag_agent"
path = "use_cases/run_rag_agent.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "test_embedding_config"
path = "use_cases/test_embedding_config.rs"
required-features = ["fastembed"]

# === Utility Examples ===
[[bin]]
name = "ast_splitter_test"
path = "utilities/ast_splitter_test.rs"
required-features = ["basic"]

[[bin]]
name = "debug_code_chunking"
path = "utilities/debug_code_chunking.rs"
required-features = ["code-analysis"]

[[bin]]
name = "enhanced_file_filtering"
path = "utilities/enhanced_file_filtering.rs"
required-features = ["basic"]

[[bin]]
name = "modern_api_example"
path = "utilities/modern_api_example.rs"
required-features = ["basic"]

[[bin]]
name = "simple_modern_api"
path = "utilities/simple_modern_api.rs"
required-features = ["basic"]

[[bin]]
name = "unified_transform"
path = "utilities/unified_transform_example.rs"
required-features = ["basic"]

[[bin]]
name = "node_parser_demo"
path = "utilities/node_parser_example.rs"
required-features = ["basic"]

[[bin]]
name = "semantic_splitter"
path = "utilities/semantic_splitter_demo.rs"
required-features = ["basic"]

[[bin]]
name = "sentence_window"
path = "utilities/sentence_window_demo.rs"
required-features = ["basic"]

[[bin]]
name = "markdown_parser"
path = "utilities/markdown_parser_demo.rs"
required-features = ["basic"]

[[bin]]
name = "rag_tools"
path = "utilities/rag_tools.rs"
required-features = ["basic"]

# === Legacy Examples (keeping for compatibility) ===
[[bin]]
name = "hello_world"
path = "backup/01_getting_started/hello_world.rs"
required-features = ["basic"]

[[bin]]
name = "basic_indexing"
path = "backup/01_getting_started/basic_indexing.rs"
required-features = ["basic"]

[[bin]]
name = "basic_querying"
path = "backup/01_getting_started/basic_querying.rs"
required-features = ["basic"]

[[bin]]
name = "basic_usage"
path = "backup/01_getting_started/basic_usage.rs"
required-features = ["basic"]

[[bin]]
name = "candle_embedder_demo"
path = "backup/02_core_components/embedders/candle_embedder_demo.rs"
required-features = ["candle"]

[[bin]]
name = "candle_embedder_performance"
path = "backup/02_core_components/embedders/candle_embedder_performance.rs"
required-features = ["candle", "benchmarks"]

[[bin]]
name = "qdrant_vector_store_demo"
path = "backup/02_core_components/vector_stores/qdrant_vector_store_demo.rs"
required-features = ["qdrant"]

[[bin]]
name = "advanced_retrieval_demo"
path = "backup/03_advanced_features/advanced_retrieval_demo.rs"
required-features = ["performance"]

[[bin]]
name = "mcp_integration_example"
path = "backup/04_integrations/mcp_integration_example.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "complete_rag_demo"
path = "backup/06_production/complete_rag_demo.rs"
required-features = ["knowledge-base"]

[[bin]]
name = "end_to_end_indexing"
path = "backup/06_production/end_to_end_indexing.rs"
required-features = ["knowledge-base"]

[[bin]]
name = "end_to_end_query"
path = "backup/06_production/end_to_end_query.rs"
required-features = ["knowledge-base"]

[[bin]]
name = "end_to_end_retrieval_demo"
path = "backup/06_production/end_to_end_retrieval_demo.rs"
required-features = ["knowledge-base"]

[[bin]]
name = "cuda_embedder_demo"
path = "backup/07_gpu_acceleration/cuda_embedder_demo.rs"
required-features = ["gpu"]

[[bin]]
name = "metal_embedder_demo"
path = "backup/07_gpu_acceleration/metal_embedder_demo.rs"
required-features = ["gpu"]

[[bin]]
name = "rag_agent_main"
path = "backup/08_rag_agent/main.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "simple_rag_agent"
path = "backup/08_rag_agent/simple_main.rs"
required-features = ["intelligent-assistant"]
