[package]
name = "cheungfun-examples"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
keywords.workspace = true
description = "Examples for the Cheungfun RAG framework"
categories.workspace = true

[dependencies]
cheungfun = { path = "../cheungfun" }
cheungfun-core = { path = "../cheungfun-core" }
cheungfun-indexing = { path = "../cheungfun-indexing" }
cheungfun-query = { path = "../cheungfun-query" }
cheungfun-integrations = { path = "../cheungfun-integrations", features = [
    "simd",
    "storage",
] }
cheungfun-agents = { path = "../cheungfun-agents" }

# Core async and utilities
tokio = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
async-trait = "0.1"
uuid = { workspace = true }
siumai = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tempfile = "3.20"
chrono = { version = "0.4", features = ["serde"] }
thiserror = "1.0"
ctrlc = "3.4"
clap = { version = "4.0", features = ["derive"] }
futures = "0.3"
rand = "0.8"
unicode-segmentation = "1.12"
env_logger = "0.11"
log = "0.4"

# Performance testing dependencies
criterion = { version = "0.5", optional = true }
sysinfo = { version = "0.32", optional = true }

[features]
# Core features
default = ["basic"]
basic = []

# Application bundles
code-analysis = ["fastembed"]
document-analysis = ["fastembed", "candle"]
intelligent-assistant = []
knowledge-base = ["qdrant", "performance"]

# Integration features
fastembed = ["cheungfun-integrations/fastembed"]
candle = ["cheungfun-integrations/candle"]
qdrant = ["cheungfun-integrations/qdrant"]
performance = ["cheungfun-integrations/simd", "cheungfun-integrations/hnsw"]

# Development features
benchmarks = ["criterion", "sysinfo", "performance"]
gpu = ["cheungfun-integrations/gpu-cuda", "cheungfun-integrations/gpu-metal"]

# Full feature set
full = [
    "code-analysis",
    "document-analysis",
    "intelligent-assistant",
    "knowledge-base",
    "gpu",
    "benchmarks",
]

# === RAG Techniques Examples (Organized by Category) ===
# Foundational RAG Techniques (01-05)
[[bin]]
name = "01_simple_rag"
path = "Rag_Techniques/01_simple_rag.rs"

[[bin]]
name = "02_csv_rag"
path = "Rag_Techniques/02_csv_rag.rs"

[[bin]]
name = "03_reliable_rag"
path = "Rag_Techniques/03_reliable_rag.rs"

[[bin]]
name = "04_chunk_size_optimization"
path = "Rag_Techniques/04_chunk_size_optimization.rs"

[[bin]]
name = "05_proposition_chunking"
path = "Rag_Techniques/05_proposition_chunking.rs"

# Query Enhancement (06-08)
[[bin]]
name = "06_query_transformations"
path = "Rag_Techniques/06_query_transformations.rs"

[[bin]]
name = "07_hyde"
path = "Rag_Techniques/07_hyde.rs"

[[bin]]
name = "08_hype"
path = "Rag_Techniques/08_hype.rs"

# Context Enrichment (09-14)
[[bin]]
name = "09_contextual_chunk_headers"
path = "Rag_Techniques/09_contextual_chunk_headers.rs"

[[bin]]
name = "10_relevant_segment_extraction"
path = "Rag_Techniques/10_relevant_segment_extraction.rs"

[[bin]]
name = "11_context_window_enhancement"
path = "Rag_Techniques/11_context_window_enhancement.rs"

[[bin]]
name = "12_semantic_chunking"
path = "Rag_Techniques/12_semantic_chunking.rs"

[[bin]]
name = "13_contextual_compression"
path = "Rag_Techniques/13_contextual_compression.rs"

[[bin]]
name = "14_document_augmentation"
path = "Rag_Techniques/14_document_augmentation.rs"

# Advanced Retrieval Methods (15-19)
[[bin]]
name = "15_fusion_retrieval"
path = "Rag_Techniques/15_fusion_retrieval.rs"

[[bin]]
name = "16_intelligent_reranking"
path = "Rag_Techniques/16_intelligent_reranking.rs"

[[bin]]
name = "17_multi_faceted_filtering"
path = "Rag_Techniques/17_multi_faceted_filtering.rs"

[[bin]]
name = "18_hierarchical_indices"
path = "Rag_Techniques/18_hierarchical_indices.rs"

[[bin]]
name = "19_ensemble_retrieval"
path = "Rag_Techniques/19_ensemble_retrieval.rs"

# Iterative and Adaptive Techniques (20-22)
[[bin]]
name = "20_retrieval_feedback_loop"
path = "Rag_Techniques/20_retrieval_feedback_loop.rs"

[[bin]]
name = "21_adaptive_retrieval"
path = "Rag_Techniques/21_adaptive_retrieval.rs"

[[bin]]
name = "22_iterative_retrieval"
path = "Rag_Techniques/22_iterative_retrieval.rs"

# Advanced Architectures (23-24)
[[bin]]
name = "23_self_rag"
path = "Rag_Techniques/23_self_rag.rs"

[[bin]]
name = "24_corrective_rag"
path = "Rag_Techniques/24_corrective_rag.rs"

# === Legacy Examples (Backward Compatibility) ===
# These provide backward compatibility by pointing to the new Rag_Techniques files
[[bin]]
name = "simple_rag"
path = "Rag_Techniques/01_simple_rag.rs"

[[bin]]
name = "csv_rag"
path = "Rag_Techniques/02_csv_rag.rs"

[[bin]]
name = "reliable_rag"
path = "Rag_Techniques/03_reliable_rag.rs"

[[bin]]
name = "chunk_size_optimization"
path = "Rag_Techniques/04_chunk_size_optimization.rs"

[[bin]]
name = "proposition_chunking"
path = "Rag_Techniques/05_proposition_chunking.rs"

[[bin]]
name = "query_transformations"
path = "Rag_Techniques/06_query_transformations.rs"

[[bin]]
name = "hyde"
path = "Rag_Techniques/07_hyde.rs"

[[bin]]
name = "hype"
path = "Rag_Techniques/08_hype.rs"

[[bin]]
name = "contextual_chunk_headers"
path = "Rag_Techniques/09_contextual_chunk_headers.rs"

[[bin]]
name = "semantic_chunking"
path = "Rag_Techniques/12_semantic_chunking.rs"

[[bin]]
name = "relevant_segment_extraction"
path = "Rag_Techniques/10_relevant_segment_extraction.rs"

[[bin]]
name = "context_window_enhancement"
path = "Rag_Techniques/11_context_window_enhancement.rs"

[[bin]]
name = "document_augmentation"
path = "Rag_Techniques/14_document_augmentation.rs"

[[bin]]
name = "fusion_retrieval"
path = "Rag_Techniques/15_fusion_retrieval.rs"

[[bin]]
name = "intelligent_reranking"
path = "Rag_Techniques/16_intelligent_reranking.rs"

[[bin]]
name = "multi_faceted_filtering"
path = "Rag_Techniques/17_multi_faceted_filtering.rs"

[[bin]]
name = "hierarchical_indices"
path = "Rag_Techniques/18_hierarchical_indices.rs"

[[bin]]
name = "ensemble_retrieval"
path = "Rag_Techniques/19_ensemble_retrieval.rs"

[[bin]]
name = "self_rag"
path = "Rag_Techniques/23_self_rag.rs"

[[bin]]
name = "corrective_rag"
path = "Rag_Techniques/24_corrective_rag.rs"

[[bin]]
name = "contextual_compression"
path = "Rag_Techniques/13_contextual_compression.rs"

[[bin]]
name = "adaptive_retrieval"
path = "Rag_Techniques/21_adaptive_retrieval.rs"

[[bin]]
name = "iterative_retrieval"
path = "Rag_Techniques/22_iterative_retrieval.rs"

# === Application Examples ===
[[bin]]
name = "code_qa_system"
path = "applications/code_qa_system/main.rs"
required-features = ["code-analysis"]

[[bin]]
name = "unity_csharp_rag"
path = "applications/code_qa_system/unity_csharp_rag.rs"
required-features = ["code-analysis"]

[[bin]]
name = "markdown_rag_system"
path = "applications/document_analysis/markdown_rag.rs"
required-features = ["document-analysis"]

[[bin]]
name = "comprehensive_assistant"
path = "applications/intelligent_assistant/comprehensive_assistant.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "simple_assistant"
path = "applications/intelligent_assistant/simple_assistant.rs"
required-features = ["intelligent-assistant"]

# === Integration Examples ===
[[bin]]
name = "kvstore_integration"
path = "integrations/kvstore_demo.rs"
required-features = ["basic"]

# === Performance Examples ===
[[bin]]
name = "comprehensive_performance"
path = "performance/comprehensive_performance_test.rs"
required-features = ["benchmarks"]

[[bin]]
name = "hybrid_performance"
path = "performance/hybrid_performance_demo.rs"
required-features = ["performance"]

[[bin]]
name = "performance_runner"
path = "performance/run_performance_tests.rs"
required-features = ["benchmarks"]

[[bin]]
name = "cache_performance"
path = "performance/cache_performance_optimization.rs"
required-features = ["performance"]

# === Use Case Examples ===
[[bin]]
name = "unity_csharp_cli"
path = "use_cases/unity_csharp_rag_cli.rs"
required-features = ["code-analysis"]

[[bin]]
name = "advanced_rag"
path = "use_cases/advanced_rag_example.rs"
required-features = ["document-analysis"]

[[bin]]
name = "rag_agent"
path = "use_cases/rag_agent_example.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "run_rag_agent"
path = "use_cases/run_rag_agent.rs"
required-features = ["intelligent-assistant"]

[[bin]]
name = "test_embedding_config"
path = "use_cases/test_embedding_config.rs"
required-features = ["fastembed"]

# === Utility Examples ===
[[bin]]
name = "ast_splitter_test"
path = "utilities/ast_splitter_test.rs"
required-features = ["basic"]

[[bin]]
name = "debug_code_chunking"
path = "utilities/debug_code_chunking.rs"
required-features = ["code-analysis"]

[[bin]]
name = "enhanced_file_filtering"
path = "utilities/enhanced_file_filtering.rs"
required-features = ["basic"]

[[bin]]
name = "modern_api_example"
path = "utilities/modern_api_example.rs"
required-features = ["basic"]

[[bin]]
name = "simple_modern_api"
path = "utilities/simple_modern_api.rs"
required-features = ["basic"]

[[bin]]
name = "unified_transform"
path = "utilities/unified_transform_example.rs"
required-features = ["basic"]

[[bin]]
name = "node_parser_demo"
path = "utilities/node_parser_example.rs"
required-features = ["basic"]

[[bin]]
name = "semantic_splitter"
path = "utilities/semantic_splitter_demo.rs"
required-features = ["basic"]

[[bin]]
name = "sentence_window"
path = "utilities/sentence_window_demo.rs"
required-features = ["basic"]

[[bin]]
name = "markdown_parser"
path = "utilities/markdown_parser_demo.rs"
required-features = ["basic"]

[[bin]]
name = "rag_tools"
path = "utilities/rag_tools.rs"
required-features = ["basic"]

# === Removed Legacy Examples ===
# Note: backup folder and legacy examples have been cleaned up
# All functionality is now available in the organized Rag_Techniques folder

# All backup examples have been removed
# Use the organized Rag_Techniques examples instead
